// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/types";
import type * as prismicClient from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type BlogPostDocumentDataSlicesSlice = never;

/**
 * Content for Blog Post documents
 */
interface BlogPostDocumentData {
  /**
   * Slice Zone field in *Blog Post*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<BlogPostDocumentDataSlicesSlice> /**
   * Meta Description field in *Blog Post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: blog_post.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Blog Post*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Meta Title field in *Blog Post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: blog_post.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_title: prismic.KeyTextField;
}

/**
 * Blog Post document from Prismic
 *
 * - **API ID**: `blog_post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BlogPostDocumentData>,
    "blog_post",
    Lang
  >;

type FooterDocumentDataSlicesSlice = NavigationSlice | OpeningHoursSlice;

type FooterDocumentDataSlices1Slice = never;

/**
 * Item in *Footer → Bottom Navigation*
 */
export interface FooterDocumentDataBottomNavigationItem {
  /**
   * Label field in *Footer → Bottom Navigation*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Label
   * - **API ID Path**: footer.bottomNavigation[].label
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  label: prismic.TitleField;

  /**
   * Link field in *Footer → Bottom Navigation*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: footer.bottomNavigation[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Item in *Footer → Social Icons*
 */
export interface FooterDocumentDataSocialIconsItem {
  /**
   * Icon - www.iconify.design field in *Footer → Social Icons*
   *
   * - **Field Type**: Text
   * - **Placeholder**: eg. la:twitter
   * - **API ID Path**: footer.socialIcons[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Link field in *Footer → Social Icons*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: footer.socialIcons[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Content for Footer documents
 */
interface FooterDocumentData {
  /**
   * Private Keywords field in *Footer*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Enter a few keywords
   * - **API ID Path**: footer.privateKeywords
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  privateKeywords: prismic.KeyTextField;

  /**
   * Background Color field in *Footer*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background Color
   * - **Default Value**: secondary
   * - **API ID Path**: footer.backgroundColor
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundColor: prismic.SelectField<
    "secondary" | "primary" | "muted" | "light",
    "filled"
  >;

  /**
   * Slice Zone field in *Footer*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<FooterDocumentDataSlicesSlice> /**
   * Logo field in *Footer*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.logo
   * - **Tab**: Logo
   * - **Documentation**: https://prismic.io/docs/field#image
   */;
  logo: prismic.ImageField<never>;

  /**
   * Inverse Logo field in *Footer*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.inverseLogo
   * - **Tab**: Logo
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  inverseLogo: prismic.ImageField<never>;

  /**
   * Slice Zone field in *Footer*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.slices1[]
   * - **Tab**: Logo
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices1: prismic.SliceZone<FooterDocumentDataSlices1Slice> /**
   * Bottom Navigation field in *Footer*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.bottomNavigation[]
   * - **Tab**: Bottom Navigation
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  bottomNavigation: prismic.GroupField<
    Simplify<FooterDocumentDataBottomNavigationItem>
  > /**
   * Social Icons field in *Footer*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.socialIcons[]
   * - **Tab**: Social Icons
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  socialIcons: prismic.GroupField<Simplify<FooterDocumentDataSocialIconsItem>>;
}

/**
 * Footer document from Prismic
 *
 * - **API ID**: `footer`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FooterDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<FooterDocumentData>,
    "footer",
    Lang
  >;

type HeaderDocumentDataSlicesSlice = NavItemSlice;

/**
 * Content for Header documents
 */
interface HeaderDocumentData {
  /**
   * Private Keywords field in *Header*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Enter a few keywords
   * - **API ID Path**: header.privateKeywords
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  privateKeywords: prismic.KeyTextField;

  /**
   * Background Color field in *Header*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background Color
   * - **Default Value**: light
   * - **API ID Path**: header.backgroundColor
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundColor: prismic.SelectField<
    "light" | "primary" | "secondary" | "muted",
    "filled"
  >;

  /**
   * Transparent field in *Header*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: header.transparent
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  transparent: prismic.BooleanField;

  /**
   * Sticky field in *Header*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Sticky
   * - **Default Value**: false
   * - **API ID Path**: header.sticky
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  sticky: prismic.SelectField<"false" | "permanent" | "on scroll up", "filled">;

  /**
   * Slice Zone field in *Header*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: header.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HeaderDocumentDataSlicesSlice> /**
   * Logo field in *Header*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: header.logo
   * - **Tab**: Logo
   * - **Documentation**: https://prismic.io/docs/field#image
   */;
  logo: prismic.ImageField<never>;

  /**
   * Inverse Logo field in *Header*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: header.inverseLogo
   * - **Tab**: Logo
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  inverseLogo: prismic.ImageField<never>;
}

/**
 * Header document from Prismic
 *
 * - **API ID**: `header`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HeaderDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HeaderDocumentData>,
    "header",
    Lang
  >;

/**
 * Item in *Page → Sections*
 */
export interface PageDocumentDataSectionsItem {
  /**
   * Section field in *Page → Sections*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: page.sections[].section
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  section: prismic.ContentRelationshipField<"page_section">;
}

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: page.title
   * - **Tab**: Page
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Private Keywords field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Private Keywords
   * - **API ID Path**: page.privateKeywords
   * - **Tab**: Page
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  privateKeywords: prismic.KeyTextField;

  /**
   * Sections field in *Page*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: page.sections[]
   * - **Tab**: Page
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  sections: prismic.GroupField<Simplify<PageDocumentDataSectionsItem>> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Choose a meaningful title
   * - **API ID Path**: page.metaTitle
   * - **Tab**: SEO Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  metaTitle: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Write an interesting description
   * - **API ID Path**: page.metaDescription
   * - **Tab**: SEO Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  metaDescription: prismic.KeyTextField;

  /**
   * Social Media Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.socialMediaImage
   * - **Tab**: SEO Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  socialMediaImage: prismic.ImageField<never>;

  /**
   * Exclude field in *Page*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: page.exclude
   * - **Tab**: SEO Metadata
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  exclude: prismic.BooleanField;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

type PageSectionDocumentDataSlicesSlice =
  | SlideshowSlice
  | TextBlockSlice
  | ButtonGroupSlice
  | ColumnsSlice
  | CardsSlice
  | SplitSlice;

/**
 * Content for Page Section documents
 */
interface PageSectionDocumentData {
  /**
   * Private Keywords field in *Page Section*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Enter a few keywords
   * - **API ID Path**: page_section.privateKeywords
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  privateKeywords: prismic.KeyTextField;

  /**
   * Slice Zone field in *Page Section*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page_section.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageSectionDocumentDataSlicesSlice> /**
   * Background Color field in *Page Section*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: white
   * - **API ID Path**: page_section.backgroundColor
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#select
   */;
  backgroundColor: prismic.SelectField<
    "white" | "primary" | "secondary" | "muted",
    "filled"
  >;

  /**
   * Background Image field in *Page Section*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page_section.backgroundImage
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  backgroundImage: prismic.ImageField<never>;

  /**
   * Background Image Overlay field in *Page Section*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: page_section.backgroundImageOverlay
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundImageOverlay: prismic.SelectField<
    "dark" | "light" | "none",
    "filled"
  >;

  /**
   * Background Position field in *Page Section*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: page_section.background_position
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_position: prismic.SelectField<
    "center" | "left" | "right",
    "filled"
  >;

  /**
   * Parallax Effect field in *Page Section*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: page_section.parallaxEffect
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  parallaxEffect: prismic.BooleanField;

  /**
   * Divider field in *Page Section*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: page_section.divider
   * - **Tab**: Background
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  divider: prismic.BooleanField;
}

/**
 * Page Section document from Prismic
 *
 * - **API ID**: `page_section`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageSectionDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<PageSectionDocumentData>,
    "page_section",
    Lang
  >;

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Site Title field in *Settings*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title of the site
   * - **API ID Path**: settings.siteTitle
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  siteTitle: prismic.TitleField;

  /**
   * Start Page field in *Settings*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.startPage
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  startPage: prismic.ContentRelationshipField<"page">;

  /**
   * Default Header field in *Settings*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.defaultHeader
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  defaultHeader: prismic.ContentRelationshipField<"header">;

  /**
   * Default Footer field in *Settings*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.defaultFooter
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  defaultFooter: prismic.ContentRelationshipField<"footer">;

  /**
   * Logo field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.logo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  logo: prismic.ImageField<never>;

  /**
   * Newsletter Description field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text above the sign up form
   * - **API ID Path**: settings.newsletterDescription
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  newsletterDescription: prismic.RichTextField;

  /**
   * Newsletter Disclaimer field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Small text below sign up form
   * - **API ID Path**: settings.newsletterDisclaimer
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  newsletterDisclaimer: prismic.RichTextField;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

export type AllDocumentTypes =
  | BlogPostDocument
  | FooterDocument
  | HeaderDocument
  | PageDocument
  | PageSectionDocument
  | SettingsDocument;

/**
 * Primary content in *Button Group → Primary*
 */
export interface ButtonGroupSliceDefaultPrimary {
  /**
   * Alignment field in *Button Group → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: button_group.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;
}

/**
 * Primary content in *Button Group → Items*
 */
export interface ButtonGroupSliceDefaultItem {
  /**
   * Button Label field in *Button Group → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: button_group.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Button Group → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: button_group.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Default variation for Button Group Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ButtonGroupSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ButtonGroupSliceDefaultPrimary>,
  Simplify<ButtonGroupSliceDefaultItem>
>;

/**
 * Primary content in *Button Group → Primary*
 */
export interface ButtonGroupSliceIconsPrimary {
  /**
   * Alignment field in *Button Group → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: button_group.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;
}

/**
 * Primary content in *Button Group → Items*
 */
export interface ButtonGroupSliceIconsItem {
  /**
   * Icon - https://iconify.design field in *Button Group → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: e.g. "la:home"
   * - **API ID Path**: button_group.items[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Button Label field in *Button Group → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: button_group.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Button Group → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: button_group.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Icons variation for Button Group Slice
 *
 * - **API ID**: `icons`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ButtonGroupSliceIcons = prismic.SharedSliceVariation<
  "icons",
  Simplify<ButtonGroupSliceIconsPrimary>,
  Simplify<ButtonGroupSliceIconsItem>
>;

/**
 * Primary content in *Button Group → Primary*
 */
export interface ButtonGroupSliceLargePrimary {
  /**
   * Alignment field in *Button Group → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: button_group.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;
}

/**
 * Primary content in *Button Group → Items*
 */
export interface ButtonGroupSliceLargeItem {
  /**
   * Button Label field in *Button Group → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: button_group.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Button Group → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: button_group.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Large variation for Button Group Slice
 *
 * - **API ID**: `large`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ButtonGroupSliceLarge = prismic.SharedSliceVariation<
  "large",
  Simplify<ButtonGroupSliceLargePrimary>,
  Simplify<ButtonGroupSliceLargeItem>
>;

/**
 * Slice variation for *Button Group*
 */
type ButtonGroupSliceVariation =
  | ButtonGroupSliceDefault
  | ButtonGroupSliceIcons
  | ButtonGroupSliceLarge;

/**
 * Button Group Shared Slice
 *
 * - **API ID**: `button_group`
 * - **Description**: Button Group
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ButtonGroupSlice = prismic.SharedSlice<
  "button_group",
  ButtonGroupSliceVariation
>;

/**
 * Primary content in *Cards → Primary*
 */
export interface CardsSliceDefaultPrimary {
  /**
   * Alignment field in *Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: cards.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Background Color field in *Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: white
   * - **API ID Path**: cards.primary.backgroundColor
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundColor: prismic.SelectField<
    "white" | "primary" | "secondary" | "muted",
    "filled"
  >;

  /**
   * Slider field in *Cards → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: cards.primary.slider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  slider: prismic.BooleanField;

  /**
   * Image Ratio (%) field in *Cards → Primary*
   *
   * - **Field Type**: Number
   * - **Placeholder**: 60
   * - **API ID Path**: cards.primary.imageRatio
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  imageRatio: prismic.NumberField;
}

/**
 * Primary content in *Cards → Items*
 */
export interface CardsSliceDefaultItem {
  /**
   * Image field in *Cards → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.items[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Subtitle field in *Cards → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: cards.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Title field in *Cards → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: cards.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Cards → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: cards.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Cards → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: cards.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Link field in *Cards → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: cards.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Default variation for Cards Slice
 *
 * - **API ID**: `default`
 * - **Description**: Cards
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CardsSliceDefaultPrimary>,
  Simplify<CardsSliceDefaultItem>
>;

/**
 * Primary content in *Cards → Primary*
 */
export interface CardsSliceWithIconPrimary {
  /**
   * Alignment field in *Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: cards.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Background Color field in *Cards → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: white
   * - **API ID Path**: cards.primary.backgroundColor
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundColor: prismic.SelectField<
    "white" | "primary" | "secondary" | "muted",
    "filled"
  >;

  /**
   * Slider field in *Cards → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: cards.primary.slider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  slider: prismic.BooleanField;
}

/**
 * Primary content in *Cards → Items*
 */
export interface CardsSliceWithIconItem {
  /**
   * Icon - https://iconify.design field in *Cards → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: e.g. "la:home"
   * - **API ID Path**: cards.items[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Subtitle field in *Cards → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: cards.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Title field in *Cards → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: cards.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Cards → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: cards.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Cards → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: cards.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Link field in *Cards → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: cards.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * With Icon variation for Cards Slice
 *
 * - **API ID**: `withIcon`
 * - **Description**: Cards
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardsSliceWithIcon = prismic.SharedSliceVariation<
  "withIcon",
  Simplify<CardsSliceWithIconPrimary>,
  Simplify<CardsSliceWithIconItem>
>;

/**
 * Slice variation for *Cards*
 */
type CardsSliceVariation = CardsSliceDefault | CardsSliceWithIcon;

/**
 * Cards Shared Slice
 *
 * - **API ID**: `cards`
 * - **Description**: Cards
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardsSlice = prismic.SharedSlice<"cards", CardsSliceVariation>;

/**
 * Primary content in *Columns → Primary*
 */
export interface ColumnsSliceDefaultPrimary {
  /**
   * Alignment field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: columns.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Max Columns field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: 4
   * - **API ID Path**: columns.primary.maxColumns
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  maxColumns: prismic.SelectField<"4" | "3" | "2", "filled">;

  /**
   * Slider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.slider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  slider: prismic.BooleanField;

  /**
   * Image Ratio (%) field in *Columns → Primary*
   *
   * - **Field Type**: Number
   * - **Placeholder**: 60
   * - **API ID Path**: columns.primary.imageRatio
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  imageRatio: prismic.NumberField;

  /**
   * Divider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.divider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  divider: prismic.BooleanField;
}

/**
 * Primary content in *Columns → Items*
 */
export interface ColumnsSliceDefaultItem {
  /**
   * Image field in *Columns → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: columns.items[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Subtitle field in *Columns → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: columns.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Title field in *Columns → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: columns.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Columns → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: columns.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Columns → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: columns.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Columns → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: columns.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Default variation for Columns Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ColumnsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ColumnsSliceDefaultPrimary>,
  Simplify<ColumnsSliceDefaultItem>
>;

/**
 * Primary content in *Columns → Primary*
 */
export interface ColumnsSliceWithIconPrimary {
  /**
   * Alignment field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: columns.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Max Columns field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: 4
   * - **API ID Path**: columns.primary.maxColumns
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  maxColumns: prismic.SelectField<"4" | "3" | "2", "filled">;

  /**
   * Slider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.slider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  slider: prismic.BooleanField;

  /**
   * Image Ratio (%) field in *Columns → Primary*
   *
   * - **Field Type**: Number
   * - **Placeholder**: 60
   * - **API ID Path**: columns.primary.imageRatio
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  imageRatio: prismic.NumberField;

  /**
   * Divider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.divider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  divider: prismic.BooleanField;
}

/**
 * Primary content in *Columns → Items*
 */
export interface ColumnsSliceWithIconItem {
  /**
   * Icon - https://iconify.design field in *Columns → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: e.g. \"la:home\"
   * - **API ID Path**: columns.items[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Subtitle field in *Columns → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: columns.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Title field in *Columns → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: columns.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Columns → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: columns.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Columns → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: columns.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Columns → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: columns.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * WithIcon variation for Columns Slice
 *
 * - **API ID**: `withIcon`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ColumnsSliceWithIcon = prismic.SharedSliceVariation<
  "withIcon",
  Simplify<ColumnsSliceWithIconPrimary>,
  Simplify<ColumnsSliceWithIconItem>
>;

/**
 * Primary content in *Columns → Primary*
 */
export interface ColumnsSliceTextPrimary {
  /**
   * Alignment field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: columns.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Max Columns field in *Columns → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: 4
   * - **API ID Path**: columns.primary.maxColumns
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  maxColumns: prismic.SelectField<"4" | "3" | "2", "filled">;

  /**
   * Slider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.slider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  slider: prismic.BooleanField;

  /**
   * Divider field in *Columns → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: columns.primary.divider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  divider: prismic.BooleanField;
}

/**
 * Primary content in *Columns → Items*
 */
export interface ColumnsSliceTextItem {
  /**
   * Title field in *Columns → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: columns.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Columns → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: columns.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Columns → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: columns.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Columns → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: columns.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Text variation for Columns Slice
 *
 * - **API ID**: `text`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ColumnsSliceText = prismic.SharedSliceVariation<
  "text",
  Simplify<ColumnsSliceTextPrimary>,
  Simplify<ColumnsSliceTextItem>
>;

/**
 * Slice variation for *Columns*
 */
type ColumnsSliceVariation =
  | ColumnsSliceDefault
  | ColumnsSliceWithIcon
  | ColumnsSliceText;

/**
 * Columns Shared Slice
 *
 * - **API ID**: `columns`
 * - **Description**: Columns
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ColumnsSlice = prismic.SharedSlice<
  "columns",
  ColumnsSliceVariation
>;

/**
 * Primary content in *Slideshow → Primary*
 */
export interface SlideshowSliceDefaultPrimary {
  /**
   * Color field in *Slideshow → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Color
   * - **Default Value**: dark
   * - **API ID Path**: slideshow.primary.color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  color: prismic.SelectField<"dark" | "light", "filled">;

  /**
   * Height field in *Slideshow → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: large
   * - **API ID Path**: slideshow.primary.height
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  height: prismic.SelectField<"large" | "small" | "fullscreen", "filled">;

  /**
   * Background Overlay field in *Slideshow → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: true
   * - **API ID Path**: slideshow.primary.backgroundOverlay
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  backgroundOverlay: prismic.BooleanField;

  /**
   * Parallax Effect field in *Slideshow → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: slideshow.primary.parallaxEffect
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  parallaxEffect: prismic.BooleanField;

  /**
   * Ken Burns Effect field in *Slideshow → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: slideshow.primary.kenBurnsEffect
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  kenBurnsEffect: prismic.BooleanField;
}

/**
 * Primary content in *Slideshow → Items*
 */
export interface SlideshowSliceDefaultItem {
  /**
   * Background Image field in *Slideshow → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: slideshow.items[].backgroundImage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  backgroundImage: prismic.ImageField<never>;

  /**
   * Subtitle field in *Slideshow → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Subtitle
   * - **API ID Path**: slideshow.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.RichTextField;

  /**
   * Title field in *Slideshow → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Title
   * - **API ID Path**: slideshow.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Button Label field in *Slideshow → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: slideshow.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Slideshow → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: slideshow.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;

  /**
   * Text Alignment field in *Slideshow → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Text Alignment
   * - **Default Value**: center
   * - **API ID Path**: slideshow.items[].textAlignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  textAlignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Background Alignment field in *Slideshow → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background Alignment
   * - **Default Value**: center
   * - **API ID Path**: slideshow.items[].backgroundAlignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundAlignment: prismic.SelectField<
    "center" | "left" | "right",
    "filled"
  >;

  /**
   * Video field in *Slideshow → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Video
   * - **API ID Path**: slideshow.items[].video
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  video: prismic.LinkField;
}

/**
 * Default variation for Slideshow Slice
 *
 * - **API ID**: `default`
 * - **Description**: Slideshow
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SlideshowSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SlideshowSliceDefaultPrimary>,
  Simplify<SlideshowSliceDefaultItem>
>;

/**
 * Primary content in *Slideshow → Primary*
 */
export interface SlideshowSliceTextHighlightPrimary {
  /**
   * Color field in *Slideshow → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Color
   * - **Default Value**: dark
   * - **API ID Path**: slideshow.primary.color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  color: prismic.SelectField<"dark" | "light", "filled">;

  /**
   * Height field in *Slideshow → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Height
   * - **Default Value**: large
   * - **API ID Path**: slideshow.primary.height
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  height: prismic.SelectField<"large" | "small" | "fullscreen", "filled">;

  /**
   * Background Parallax field in *Slideshow → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: slideshow.primary.backgroundParallax
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  backgroundParallax: prismic.BooleanField;

  /**
   * Ken Burns Effect field in *Slideshow → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: slideshow.primary.kenBurnsEffect
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  kenBurnsEffect: prismic.BooleanField;
}

/**
 * Primary content in *Slideshow → Items*
 */
export interface SlideshowSliceTextHighlightItem {
  /**
   * Background Image field in *Slideshow → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: slideshow.items[].backgroundImage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  backgroundImage: prismic.ImageField<never>;

  /**
   * Title field in *Slideshow → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Title
   * - **API ID Path**: slideshow.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Text Alignment field in *Slideshow → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Text Alignment
   * - **Default Value**: center
   * - **API ID Path**: slideshow.items[].textAlignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  textAlignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Background Alignment field in *Slideshow → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Background Alignment
   * - **Default Value**: center
   * - **API ID Path**: slideshow.items[].backgroundAlignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  backgroundAlignment: prismic.SelectField<
    "center" | "left" | "right",
    "filled"
  >;

  /**
   * Video field in *Slideshow → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Video
   * - **API ID Path**: slideshow.items[].video
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  video: prismic.LinkField;
}

/**
 * Text Highlight variation for Slideshow Slice
 *
 * - **API ID**: `textHighlight`
 * - **Description**: Slideshow
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SlideshowSliceTextHighlight = prismic.SharedSliceVariation<
  "textHighlight",
  Simplify<SlideshowSliceTextHighlightPrimary>,
  Simplify<SlideshowSliceTextHighlightItem>
>;

/**
 * Slice variation for *Slideshow*
 */
type SlideshowSliceVariation =
  | SlideshowSliceDefault
  | SlideshowSliceTextHighlight;

/**
 * Slideshow Shared Slice
 *
 * - **API ID**: `slideshow`
 * - **Description**: Slideshow
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SlideshowSlice = prismic.SharedSlice<
  "slideshow",
  SlideshowSliceVariation
>;

/**
 * Primary content in *Split → Primary*
 */
export interface SplitSliceDefaultPrimary {
  /**
   * Vertical Alignment field in *Split → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: top
   * - **API ID Path**: split.primary.verticalAlignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  verticalAlignment: prismic.SelectField<"top" | "middle" | "bottom", "filled">;

  /**
   * Divider field in *Split → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: split.primary.divider
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  divider: prismic.BooleanField;
}

/**
 * Primary content in *Split → Items*
 */
export interface SplitSliceDefaultItem {
  /**
   * Image field in *Split → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Image Position field in *Split → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: left
   * - **API ID Path**: split.items[].imagePosition
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  imagePosition: prismic.SelectField<"left" | "right", "filled">;

  /**
   * Subtitle field in *Split → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Title field in *Split → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Text field in *Split → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button Label field in *Split → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Split → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: split.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Default variation for Split Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SplitSliceDefaultPrimary>,
  Simplify<SplitSliceDefaultItem>
>;

/**
 * Slice variation for *Split*
 */
type SplitSliceVariation = SplitSliceDefault;

/**
 * Split Shared Slice
 *
 * - **API ID**: `split`
 * - **Description**: Split
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SplitSlice = prismic.SharedSlice<"split", SplitSliceVariation>;

/**
 * Primary content in *Text Block → Primary*
 */
export interface TextBlockSliceDefaultPrimary {
  /**
   * Alignment field in *Text Block → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: text_block.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Title field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: text_block.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Subtitle field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: text_block.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Text field in *Text Block → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: text_block.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *Text Block → Items*
 */
export interface TextBlockSliceDefaultItem {
  /**
   * Button Label field in *Text Block → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: text_block.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Text Block → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: text_block.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Default variation for Text Block Slice
 *
 * - **API ID**: `default`
 * - **Description**: Text & Buttons
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextBlockSliceDefaultPrimary>,
  Simplify<TextBlockSliceDefaultItem>
>;

/**
 * Primary content in *Text Block → Primary*
 */
export interface TextBlockSliceLargePrimary {
  /**
   * Alignment field in *Text Block → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: left
   * - **API ID Path**: text_block.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"left" | "right", "filled">;

  /**
   * Title field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: text_block.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Subtitle field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: text_block.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Text field in *Text Block → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: text_block.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *Text Block → Items*
 */
export interface TextBlockSliceLargeItem {
  /**
   * Button Label field in *Text Block → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: text_block.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Text Block → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: text_block.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Large variation for Text Block Slice
 *
 * - **API ID**: `large`
 * - **Description**: Text & Buttons
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceLarge = prismic.SharedSliceVariation<
  "large",
  Simplify<TextBlockSliceLargePrimary>,
  Simplify<TextBlockSliceLargeItem>
>;

/**
 * Primary content in *Text Block → Primary*
 */
export interface TextBlockSliceHeroTitlePrimary {
  /**
   * Alignment field in *Text Block → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: center
   * - **API ID Path**: text_block.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"center" | "left" | "right", "filled">;

  /**
   * Title field in *Text Block → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Title
   * - **API ID Path**: text_block.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;
}

/**
 * Primary content in *Text Block → Items*
 */
export interface TextBlockSliceHeroTitleItem {
  /**
   * Button Label field in *Text Block → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: text_block.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Text Block → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: text_block.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Hero Title variation for Text Block Slice
 *
 * - **API ID**: `heroTitle`
 * - **Description**: TextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceHeroTitle = prismic.SharedSliceVariation<
  "heroTitle",
  Simplify<TextBlockSliceHeroTitlePrimary>,
  Simplify<TextBlockSliceHeroTitleItem>
>;

/**
 * Primary content in *Text Block → Primary*
 */
export interface TextBlockSliceSideTitlePrimary {
  /**
   * Alignment field in *Text Block → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: left
   * - **API ID Path**: text_block.primary.alignment
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  alignment: prismic.SelectField<"left" | "right" | "center", "filled">;

  /**
   * Title field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: text_block.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Subtitle field in *Text Block → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Subtitle
   * - **API ID Path**: text_block.primary.subtitle
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtitle: prismic.TitleField;

  /**
   * Text field in *Text Block → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: text_block.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *Text Block → Items*
 */
export interface TextBlockSliceSideTitleItem {
  /**
   * Button Label field in *Text Block → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Button Label
   * - **API ID Path**: text_block.items[].buttonLabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonLabel: prismic.KeyTextField;

  /**
   * Button Link field in *Text Block → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Button Link
   * - **API ID Path**: text_block.items[].buttonLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonLink: prismic.LinkField;
}

/**
 * Side Title variation for Text Block Slice
 *
 * - **API ID**: `sideTitle`
 * - **Description**: Text & Buttons
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceSideTitle = prismic.SharedSliceVariation<
  "sideTitle",
  Simplify<TextBlockSliceSideTitlePrimary>,
  Simplify<TextBlockSliceSideTitleItem>
>;

/**
 * Slice variation for *Text Block*
 */
type TextBlockSliceVariation =
  | TextBlockSliceDefault
  | TextBlockSliceLarge
  | TextBlockSliceHeroTitle
  | TextBlockSliceSideTitle;

/**
 * Text Block Shared Slice
 *
 * - **API ID**: `text_block`
 * - **Description**: Text Block
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSlice = prismic.SharedSlice<
  "text_block",
  TextBlockSliceVariation
>;

/**
 * Primary content in *NavItem → Primary*
 */
export interface NavItemSliceLinkPrimary {
  /**
   * Label field in *NavItem → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Label
   * - **API ID Path**: nav_item.primary.label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;

  /**
   * Link field in *NavItem → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: nav_item.primary.link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Link variation for NavItem Slice
 *
 * - **API ID**: `link`
 * - **Description**: Link
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavItemSliceLink = prismic.SharedSliceVariation<
  "link",
  Simplify<NavItemSliceLinkPrimary>,
  never
>;

/**
 * Primary content in *NavItem → Primary*
 */
export interface NavItemSliceDropdownPrimary {
  /**
   * Label field in *NavItem → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Label
   * - **API ID Path**: nav_item.primary.label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;
}

/**
 * Primary content in *NavItem → Items*
 */
export interface NavItemSliceDropdownItem {
  /**
   * Label field in *NavItem → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Label
   * - **API ID Path**: nav_item.items[].label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;

  /**
   * Link field in *NavItem → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: nav_item.items[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Dropdown variation for NavItem Slice
 *
 * - **API ID**: `dropdown`
 * - **Description**: Link
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavItemSliceDropdown = prismic.SharedSliceVariation<
  "dropdown",
  Simplify<NavItemSliceDropdownPrimary>,
  Simplify<NavItemSliceDropdownItem>
>;

/**
 * Slice variation for *NavItem*
 */
type NavItemSliceVariation = NavItemSliceLink | NavItemSliceDropdown;

/**
 * NavItem Shared Slice
 *
 * - **API ID**: `nav_item`
 * - **Description**: NavItem
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavItemSlice = prismic.SharedSlice<
  "nav_item",
  NavItemSliceVariation
>;

/**
 * Primary content in *Navigation → Primary*
 */
export interface NavigationSliceDefaultPrimary {
  /**
   * Title field in *Navigation → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: navigation.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;
}

/**
 * Primary content in *Navigation → Items*
 */
export interface NavigationSliceDefaultItem {
  /**
   * Text field in *Navigation → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: navigation.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Link field in *Navigation → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: navigation.items[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Default variation for Navigation Slice
 *
 * - **API ID**: `default`
 * - **Description**: Navigation
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<NavigationSliceDefaultPrimary>,
  Simplify<NavigationSliceDefaultItem>
>;

/**
 * Primary content in *Navigation → Primary*
 */
export interface NavigationSliceIconsPrimary {
  /**
   * Title field in *Navigation → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: navigation.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;
}

/**
 * Primary content in *Navigation → Items*
 */
export interface NavigationSliceIconsItem {
  /**
   * Icon - www.iconify.design field in *Navigation → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: eg. la:home
   * - **API ID Path**: navigation.items[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Text field in *Navigation → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: navigation.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Link field in *Navigation → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: navigation.items[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Icons variation for Navigation Slice
 *
 * - **API ID**: `icons`
 * - **Description**: Navigation
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationSliceIcons = prismic.SharedSliceVariation<
  "icons",
  Simplify<NavigationSliceIconsPrimary>,
  Simplify<NavigationSliceIconsItem>
>;

/**
 * Primary content in *Navigation → Items*
 */
export interface NavigationSliceCircledIconsItem {
  /**
   * Icon - www.iconify.design field in *Navigation → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: eg. la:home
   * - **API ID Path**: navigation.items[].icon
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  icon: prismic.KeyTextField;

  /**
   * Label field in *Navigation → Items*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Label
   * - **API ID Path**: navigation.items[].label
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  label: prismic.TitleField;

  /**
   * Text field in *Navigation → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Text
   * - **API ID Path**: navigation.items[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Link field in *Navigation → Items*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Link
   * - **API ID Path**: navigation.items[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

/**
 * Circled Icons variation for Navigation Slice
 *
 * - **API ID**: `circledIcons`
 * - **Description**: Navigation
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationSliceCircledIcons = prismic.SharedSliceVariation<
  "circledIcons",
  Record<string, never>,
  Simplify<NavigationSliceCircledIconsItem>
>;

/**
 * Slice variation for *Navigation*
 */
type NavigationSliceVariation =
  | NavigationSliceDefault
  | NavigationSliceIcons
  | NavigationSliceCircledIcons;

/**
 * Navigation Shared Slice
 *
 * - **API ID**: `navigation`
 * - **Description**: Navigation
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationSlice = prismic.SharedSlice<
  "navigation",
  NavigationSliceVariation
>;

/**
 * Primary content in *OpeningHours → Primary*
 */
export interface OpeningHoursSliceDefaultPrimary {
  /**
   * Title field in *OpeningHours → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Title
   * - **API ID Path**: opening_hours.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;
}

/**
 * Primary content in *OpeningHours → Items*
 */
export interface OpeningHoursSliceDefaultItem {
  /**
   * Day field in *OpeningHours → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Day
   * - **API ID Path**: opening_hours.items[].day
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  day: prismic.KeyTextField;

  /**
   * Time field in *OpeningHours → Items*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Time
   * - **API ID Path**: opening_hours.items[].time
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  time: prismic.KeyTextField;
}

/**
 * Default variation for OpeningHours Slice
 *
 * - **API ID**: `default`
 * - **Description**: OpeningHours
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type OpeningHoursSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<OpeningHoursSliceDefaultPrimary>,
  Simplify<OpeningHoursSliceDefaultItem>
>;

/**
 * Slice variation for *OpeningHours*
 */
type OpeningHoursSliceVariation = OpeningHoursSliceDefault;

/**
 * OpeningHours Shared Slice
 *
 * - **API ID**: `opening_hours`
 * - **Description**: OpeningHours
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type OpeningHoursSlice = prismic.SharedSlice<
  "opening_hours",
  OpeningHoursSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismicClient.ClientConfig,
    ): prismicClient.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      BlogPostDocument,
      BlogPostDocumentData,
      BlogPostDocumentDataSlicesSlice,
      FooterDocument,
      FooterDocumentData,
      FooterDocumentDataSlicesSlice,
      FooterDocumentDataSlices1Slice,
      FooterDocumentDataBottomNavigationItem,
      FooterDocumentDataSocialIconsItem,
      HeaderDocument,
      HeaderDocumentData,
      HeaderDocumentDataSlicesSlice,
      PageDocument,
      PageDocumentData,
      PageDocumentDataSectionsItem,
      PageSectionDocument,
      PageSectionDocumentData,
      PageSectionDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      AllDocumentTypes,
      ButtonGroupSlice,
      ButtonGroupSliceDefaultPrimary,
      ButtonGroupSliceDefaultItem,
      ButtonGroupSliceIconsPrimary,
      ButtonGroupSliceIconsItem,
      ButtonGroupSliceLargePrimary,
      ButtonGroupSliceLargeItem,
      ButtonGroupSliceVariation,
      ButtonGroupSliceDefault,
      ButtonGroupSliceIcons,
      ButtonGroupSliceLarge,
      CardsSlice,
      CardsSliceDefaultPrimary,
      CardsSliceDefaultItem,
      CardsSliceWithIconPrimary,
      CardsSliceWithIconItem,
      CardsSliceVariation,
      CardsSliceDefault,
      CardsSliceWithIcon,
      ColumnsSlice,
      ColumnsSliceDefaultPrimary,
      ColumnsSliceDefaultItem,
      ColumnsSliceWithIconPrimary,
      ColumnsSliceWithIconItem,
      ColumnsSliceTextPrimary,
      ColumnsSliceTextItem,
      ColumnsSliceVariation,
      ColumnsSliceDefault,
      ColumnsSliceWithIcon,
      ColumnsSliceText,
      SlideshowSlice,
      SlideshowSliceDefaultPrimary,
      SlideshowSliceDefaultItem,
      SlideshowSliceTextHighlightPrimary,
      SlideshowSliceTextHighlightItem,
      SlideshowSliceVariation,
      SlideshowSliceDefault,
      SlideshowSliceTextHighlight,
      SplitSlice,
      SplitSliceDefaultPrimary,
      SplitSliceDefaultItem,
      SplitSliceVariation,
      SplitSliceDefault,
      TextBlockSlice,
      TextBlockSliceDefaultPrimary,
      TextBlockSliceDefaultItem,
      TextBlockSliceLargePrimary,
      TextBlockSliceLargeItem,
      TextBlockSliceHeroTitlePrimary,
      TextBlockSliceHeroTitleItem,
      TextBlockSliceSideTitlePrimary,
      TextBlockSliceSideTitleItem,
      TextBlockSliceVariation,
      TextBlockSliceDefault,
      TextBlockSliceLarge,
      TextBlockSliceHeroTitle,
      TextBlockSliceSideTitle,
      NavItemSlice,
      NavItemSliceLinkPrimary,
      NavItemSliceDropdownPrimary,
      NavItemSliceDropdownItem,
      NavItemSliceVariation,
      NavItemSliceLink,
      NavItemSliceDropdown,
      NavigationSlice,
      NavigationSliceDefaultPrimary,
      NavigationSliceDefaultItem,
      NavigationSliceIconsPrimary,
      NavigationSliceIconsItem,
      NavigationSliceCircledIconsItem,
      NavigationSliceVariation,
      NavigationSliceDefault,
      NavigationSliceIcons,
      NavigationSliceCircledIcons,
      OpeningHoursSlice,
      OpeningHoursSliceDefaultPrimary,
      OpeningHoursSliceDefaultItem,
      OpeningHoursSliceVariation,
      OpeningHoursSliceDefault,
    };
  }
}
